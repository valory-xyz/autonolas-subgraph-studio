type TraderAgent @entity (immutable: false) {
  id: Bytes!
  serviceId: BigInt!
  firstParticipation: BigInt
  lastActive: BigInt
  totalBets: Int!
  totalTraded: BigInt!
  totalPayout: BigInt!
  totalFees: BigInt!
  bets: [Bet!]! @derivedFrom(field: "bettor")
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Bet @entity (immutable: false) {
  id: ID!
  bettor: TraderAgent!
  outcomeIndex: BigInt!
  amount: BigInt!
  feeAmount: BigInt!
  countedInTotal: Boolean
  fixedProductMarketMaker: FixedProductMarketMakerCreation
  timestamp: BigInt! 
}

type CreatorAgent @entity (immutable: false) {
  id: ID!
  totalQuestions: Int!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ConditionPreparation @entity(immutable: true) {
  id: ID!
  conditionId: Bytes! # bytes32
  oracle: Bytes! # address
  questionId: Bytes! # bytes32
  outcomeSlotCount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FixedProductMarketMakerCreation @entity (immutable: false) {
  id: Bytes!
  creator: Bytes! # address
  conditionalTokens: Bytes! # address
  collateralToken: Bytes! # address
  conditionIds: [Bytes!]! # bytes32[]
  question: String
  outcomes: [String!]
  fee: BigInt! # uint256
  currentAnswer: Bytes
  currentAnswerTimestamp: BigInt
  bets: [Bet!]! @derivedFrom(field: "fixedProductMarketMaker")
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Global @entity (immutable: false) {
  id: ID!
  totalTraderAgents: Int!
  totalActiveTraderAgents: Int!
}

type LogSetQuestionFee @entity(immutable: true) {
  id: Bytes!
  arbitrator: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LogNewTemplate @entity(immutable: true) {
  id: Bytes!
  template_id: BigInt! # uint256
  user: Bytes! # address
  question_text: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Question @entity (immutable: false) {
  id: ID!
  currentAnswer: Bytes
  question: String! # string
  currentAnswerTimestamp: BigInt
  fixedProductMarketMaker: FixedProductMarketMakerCreation
}

type LogNewAnswer @entity (immutable: false) {
  id: ID!
  currentAnswer: Bytes
  currentAnswerTimestamp: BigInt
}

type QuestionFinalized @entity (immutable: false) {
  id: ID!
  currentAnswer: Bytes
  currentAnswerTimestamp: BigInt
}

type LogNotifyOfArbitrationRequest @entity (immutable: true) {
  id: Bytes!
  question_id: Bytes
  user: Bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}